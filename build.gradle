buildscript {

    repositories {

        jcenter()
    }

    dependencies {

        classpath 'com.github.rodionmoiseev.gradle.plugins:idea-utils:0.2'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.2.1"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea-utils'
apply plugin: 'maven'
apply plugin: "org.sonarqube"

group 'org.epoxide.annj'
archivesBaseName = "AnnJ"
version = getVersionFromJava(file("src/main/java/org/epoxide/annj/AnnotationDiscoverer.java"))

repositories {
    
    mavenCentral()
}

dependencies {

    compile group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
}

String getVersionFromJava(File file) {

    String major = "0";
    String minor = "0";

    String build = System.getenv("BUILD_NUMBER") ?: "0";
    def outfile = "";
    def ln = System.getProperty("line.separator")

    String prefix = "public static final String VERSION = \"";
    file.eachLine { String s ->

        String v = s.trim();
        if (v.startsWith(prefix)) {
            v = v.substring(prefix.length(), v.length() - 2);
            String[] pts = v.split("\\.");

            major = pts[0];
            minor = pts[1];
            s = s.replaceAll(".0\";", ".${build}\";");
        }
        outfile += (s + ln);
    }

    file.write(outfile);

    return "$major.$minor.$build";
}


task buildJar(type: Jar) {
    from sourceSets.main.output
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives buildJar
    archives sourcesJar
    archives javadocJar
}

sonarqube {

    properties {
        property "sonar.host.url", "https://sonarqube.com"
        property "sonar.login", System.getenv("sonarQubeApiKey")
        property "sonar.organization", "lclc98-github"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}